---
- hosts: "{{ name_group_host }}"
  gather_facts: yes

  tasks:

    - name: Install base packages
      become: yes
      yum:
        name: "{{ packages }}"
      vars:
        packages:
          - gcc-c++
          - git
          - make
          - wget

    - name: Check if n directory exists.
      become: yes
      stat:
        path: /root/n
      register: n_folder
      
    - name: Download Node.js version manager
      become: yes    
      command: curl -L https://git.io/n-install --output n-install
      when: n_folder.stat.exists != True    
        
    - name: Allow n-install to be executable.
      become: yes    
      command: chmod +x n-install
      when: n_folder.stat.exists != True         

    - name: Execute n-install.
      become: yes 
      ansible.builtin.shell:      
        cmd: yes y | ./n-install
      when: n_folder.stat.exists != True   
      
    - name: Install 13.7.0 NodeJS version
      become: yes    
      command: $HOME/n/bin/n 13.7.0
      
    - name: Clean all yum
      become: yes    
      command: yum clean all 
    
    - name: Add NodeJS 13.17.0 to PATH ENV Variable
      become: yes    
      ansible.builtin.shell: export PATH=$PATH:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/n/versions/node/13.7.0/bin
      
    - name: Add NodeJS 13.17.0 to PATH ENV Variable using bashrc file
      become: yes     
      ansible.builtin.shell: echo "PATH=$PATH:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/n/versions/node/13.7.0/bin" >> ~/.bashrc

    - name: Check if npm exists.
      become: yes
      stat:
        path: /usr/local/sbin/npm
      register: npm_file
      
    - name: Link npm 
      become: yes
      ansible.builtin.shell: ln -s /usr/local/n/versions/node/13.7.0/bin/npm /usr/local/sbin/npm
      when: npm_file.stat.exists != True 

    - name: Check if node exists.
      become: yes
      stat:
        path: /usr/local/sbin/node
      register: node_file
      
    - name: Link node 
      become: yes
      ansible.builtin.shell: ln -s /usr/local/n/versions/node/13.7.0/bin/node /usr/local/sbin/node
      when: node_file.stat.exists != True 

    - name: Check if node exists in /usr/bin/.
      become: yes
      stat:
        path: /usr/bin/node
      register: usr_bin_node_file
      
    - name: Link node 
      become: yes
      ansible.builtin.shell: ln -s /usr/local/n/versions/node/13.7.0/bin/node /usr/bin/node
      when: usr_bin_node_file.stat.exists != True
      
    - name: Install pm2
      become: yes
      community.general.npm:
        name: pm2
        global: yes
      
      #IN EC2-USER
    - name: Add NodeJS 13.17.0 to PATH ENV Variable file to ec2-user
      become_user: ec2-user
      ansible.builtin.shell: export PATH=$PATH:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ec2-user/.local/bin:/home/ec2-user/bin:/usr/local/n/versions/node/13.7.0/bin
      
    - name: Add NodeJS 13.17.0 to PATH ENV Variable using bashrc file to ec2-user  
      become_user: ec2-user
      ansible.builtin.shell: echo "PATH=$PATH:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ec2-user/.local/bin:/home/ec2-user/bin:/usr/local/n/versions/node/13.7.0/bin" >> ~/.bashrc
    
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /home/ec2-user/timeoff-management-application/
        state: directory
        mode: '0755'
      
    - name: Fetch app from Artifactory
      get_url:
        url: "http://ec2-100-25-152-224.compute-1.amazonaws.com:8082/artifactory/timeoff-management-application/{{ build_number_jenkis }}/timeoff-management-application-{{ build_number_jenkis }}.tar.gz"
        dest: /home/ec2-user/timeoff-management-application/timeoff-management-application-{{ build_number_jenkis }}.tar.gz
        username: '{{ artifactory_username }}'
        password: '{{ artifactory_password }}'
        
    - name: Extract timeoff application tar 
      ansible.builtin.unarchive:
        remote_src: yes
        src : /home/ec2-user/timeoff-management-application/timeoff-management-application-{{ build_number_jenkis }}.tar.gz
        dest: /home/ec2-user/timeoff-management-application/
        
    - name: Start application as a daemon
      ansible.builtin.shell: cd pm2 --name timeoff start npm -- start