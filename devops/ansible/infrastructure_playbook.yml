---
- name: Create infrastructure
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    region: us-east-1
    instance_type: t2.micro
    #ami: ami-0b0af3577fe5e3532 # RedHat Linux 8
    ami: ami-0c2b8ca1dad447f8a # Amazon Linux
    hosts_file: /home/ec2-user/.ansible/tmp/hosts 
    ansible_python_interpreter: /usr/bin/python3
    
  tasks:

  - name: Create EC2 Block
    block: 
      - name: Create security group
        ec2_group:
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          name: "timeoff-sg"
          description: "TimeOff servers Security Group"
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 3000
              to_port: 3000
              cidr_ip: 0.0.0.0/0
      - name: Create an EC2 key
        ec2_key:
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          name: 'timeoff-key-{{ build_number_jenkis }}'
          region: "{{ region }}"
        register: ec2_key
      - name: Save private key (PEM file)
        copy: content="{{ec2_key.key.private_key}}" dest=/home/ec2-user/.ansible/tmp/timeoff.pem mode=0600
        when: ec2_key.changed
      - name: Create an ec2 instance
        ec2:
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          key_name: 'timeoff-key-{{ build_number_jenkis }}'
          group: timeoff-sg # security group name
          instance_type: "{{ instance_type}}"
          image: "{{ ami }}"
          wait: true
          region: "{{ region }}"
          count: 1 # default
          count_tag:
            Name: timeoff
          instance_tags:
            Name: 'timeoff-server-{{ build_number_jenkis }}'
        register: ec2
      - name: Save IP to inventory file
        lineinfile:
          dest: "{{hosts_file}}"
          insertafter: '\["{{ name_group_host }}"\]'
          line: "{{item.public_ip}} ansible_user=ec2-user ansible_ssh_private_key_file=/home/ec2-user/.ansible/tmp/timeoff.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no'"
        with_items: "{{ec2.instances}}"
      - name: Wait for SSH to come up
        local_action:
          module: wait_for
          host: "{{ item.public_ip }}"
          port: 22
          delay: 10
          timeout: 240
        loop: "{{ ec2.instances }}"